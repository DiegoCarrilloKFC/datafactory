{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "df-bi-dwh"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_dwh_Operaciones_Col')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Carga Informaci√≥n Operaciones",
				"activities": [
					{
						"name": "ope_FacSgVentaDiaria",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "domi_FacVenta",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_col_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgVentaDiaria2012",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgVentaAgrupacion",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgVentaMix",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ope_FacSgMovimientoInventarioDiario",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_col_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgVentaAgrupacion",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgVentaAcumulada",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgVentaDiaria",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_col_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgVentaAcumulada",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgVentaMix",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "domi_FacVentaProducto",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_col_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgVentaMix",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgMovimientoInventarioDiario",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgArticuloBodega",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_col_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgMovimientoInventarioDiario",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "cubo_FacRegalia",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgVentaAgrupacion",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ope_FacSgVentaDiaria",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_col_cubo",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacRegalia",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgVentaAgrupacionAcumulada",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgVentaAgrupacion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_col_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgVentaAgrupacionAcumulada",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgUsoConsumo",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgMovimientoInventarioDiario",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_col_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgUsoConsumo",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "cubo_FacRdd",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgVentaAcumulada",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ope_FacSgPyG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_col_cubo",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacRdd",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgResumenOperacion",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgVentaFormaPago",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ope_FacSgVentaAcumulada",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ope_FacSgVentaMix",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ope_FacSgUsoConsumo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_col_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgResumenOperacion",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgCajaChica",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_col_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgCajaChica",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgVentaHora",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "domi_FacVenta",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_col_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgVentaHora",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgVentaFormaPago",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_col_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgVentaFormaPago",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "cubo_FacVAR",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgVentaAcumulada",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ope_FacSgPyG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_col_cubo",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacVAR",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgPyG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_col_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgPyG",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgVentaHoraAcumulada",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgVentaHora",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_col_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgVentaHoraAcumulada",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgAuditoria",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_col_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgAuditoria",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgGasto",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_col_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgGasto",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgArticuloBodega",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_col_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgArticuloBodega",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "domi_FacVenta",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_col_domi",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacVenta",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "domi_FacVentaFormaPago",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_col_domi",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacVentaFormaPago",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "domi_FacVentaProducto",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_col_domi",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacVentaProducto",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Carga Info Sus Venta",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ope_FacSgVentaAcumulada",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ope_FacSgAuditoria",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dwh_Info_Suscripcion_Proceso",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Proceso": "VENTA_COL",
								"SP": "admin_btc.usp_CargaInfoSuscripcion_Venta_Col"
							}
						}
					},
					{
						"name": "Carga Info Sus Costos",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ope_FacSgResumenOperacion",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dwh_Info_Suscripcion_Proceso",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Proceso": "COSTOS_COL",
								"SP": "admin_btc.usp_CargaInfoSuscripcion_Costos_Col"
							}
						}
					}
				],
				"parameters": {
					"IDCadenaSistemaGerente": {
						"type": "String",
						"defaultValue": "0"
					},
					"Pais": {
						"type": "String",
						"defaultValue": "COL"
					},
					"TipoCarga": {
						"type": "String",
						"defaultValue": "MANUAL"
					}
				},
				"folder": {
					"name": "dwh_OperacionesCol"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dwh_Operaciones_Ecu')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Carga Informaci√≥n Operaciones",
				"activities": [
					{
						"name": "ope_FacSgVentaDiaria",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacMpVentaKiosko",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgVentaDiaria2017",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgVentaAcumulada",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgVentaDiaria",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgVentaAcumulada",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgVentaMix",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgVentaMix",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "cubo_FacRdd",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgVentaAcumulada",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ope_FacSgPyG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_cubo",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacRdd",
									"type": "String"
								},
								"TipoCarga": {
									"value": "MANUAL",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgCajaChica",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgCajaChica",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgVentaHora",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgVentaHora",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgVentaFormaPago",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgVentaFormaPago",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "cubo_FacVAR",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgVentaAcumulada",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ope_FacSgPyG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_cubo",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacVAR",
									"type": "String"
								},
								"TipoCarga": {
									"value": "MANUAL",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgPyG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgPyG",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgVentaHoraAcumulada",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgVentaHora",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgVentaHoraAcumulada",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgPresupuestoCch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgPresupuestoCch",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgAuditoria",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgAuditoria",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "domi_FacSgProductividadDomicilio",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_domi",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgProductividadDomicilio",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgGasto",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgGasto",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Carga Info Sus Venta",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ope_FacSgVentaAcumulada",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ope_FacSgAuditoria",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ope_FacSgPresupuestoCch",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ope_FacSgCajaChica",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dwh_Info_Suscripcion_Proceso",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Proceso": "VENTA_ECU",
								"SP": "admin_btc.usp_CargaInfoSuscripcion_Venta_Ecu"
							}
						}
					},
					{
						"name": "ope_FacSgArticuloBodega",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgArticuloBodega",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacProyeccionLocalVenta",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacProyeccionLocalVenta",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacProyeccionLocalVentaAcumulada",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacProyeccionLocalVenta",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacProyeccionLocalVentaAcumulada",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacMpVentaKiosko",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacMpVentaKiosko",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"IDCadenaSistemaGerente": {
						"type": "String",
						"defaultValue": "0"
					},
					"Pais": {
						"type": "String",
						"defaultValue": "ECU"
					},
					"TipoCarga": {
						"type": "String",
						"defaultValue": "MANUAL"
					}
				},
				"folder": {
					"name": "dwh_OperacionesEcu"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dwh_Operaciones_Esp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Carga Informaci√≥n Operaciones",
				"activities": [
					{
						"name": "ope_FacSgVentaDiaria",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_esp_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgVentaDiaria",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgVentaAcumulada",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgVentaDiaria",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_esp_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgVentaAcumulada",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgVentaMix",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_esp_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgVentaMix",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgMovimientoInventarioDiario",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgArticuloBodega",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_esp_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgMovimientoInventarioDiario",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgUsoConsumo",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgMovimientoInventarioDiario",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_esp_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgUsoConsumo",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "cubo_FacRdd",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgVentaAcumulada",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ope_FacSgPyG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_esp_cubo",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacRdd",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgResumenOperacion",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgVentaFormaPago",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ope_FacSgVentaAcumulada",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ope_FacSgVentaMix",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ope_FacSgUsoConsumo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_esp_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgResumenOperacion",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgVentaHora",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_esp_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgVentaHora",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgVentaFormaPago",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_esp_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgVentaFormaPago",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "cubo_FacVAR",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgVentaAcumulada",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ope_FacSgPyG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_esp_cubo",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacVAR",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgPyG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_esp_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgPyG",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgVentaHoraAcumulada",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgVentaHora",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_esp_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgVentaHoraAcumulada",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgAuditoria",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_esp_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgAuditoria",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgArticuloBodega",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_esp_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgArticuloBodega",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Carga Info Sus Venta",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ope_FacSgAuditoria",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ope_FacSgVentaAcumulada",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dwh_Info_Suscripcion_Proceso",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Proceso": "VENTA_ESP",
								"SP": "admin_btc.usp_CargaInfoSuscripcion_Venta_Esp"
							}
						}
					},
					{
						"name": "Carga Info Sus Costos",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ope_FacSgResumenOperacion",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dwh_Info_Suscripcion_Proceso",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Proceso": "COSTOS_ESP",
								"SP": "admin_btc.usp_CargaInfoSuscripcion_Costos_Esp"
							}
						}
					}
				],
				"parameters": {
					"IDCadenaSistemaGerente": {
						"type": "String",
						"defaultValue": "0"
					},
					"Pais": {
						"type": "String",
						"defaultValue": "ESP"
					},
					"TipoCarga": {
						"type": "String",
						"defaultValue": "MANUAL"
					}
				},
				"folder": {
					"name": "dwh_OperacionesEsp"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dwh_Operaciones_UyC_Ecu')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Carga Informaci√≥n Operaciones",
				"activities": [
					{
						"name": "ope_FacSgVentaAgrupacion",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgMovimientoInventarioDiario",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgVentaAgrupacion",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgMovimientoInventarioDiario",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgMovimientoInventarioDiario",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh_xl",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "cubo_FacRegalia",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgVentaAgrupacion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_cubo",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacRegalia",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgVentaAgrupacionAcumulada",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgVentaAgrupacion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgVentaAgrupacionAcumulada",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "conta_FacSgUsoConsumoMensual",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgUsoConsumo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_conta",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgUsoConsumoMensual",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgUsoConsumo",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgMovimientoInventarioDiario",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgUsoConsumo",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh_xl",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ope_FacSgResumenOperacion",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgUsoConsumo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_ope",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacSgResumenOperacion",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Carga Info Sus Costos",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ope_FacSgResumenOperacion",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dwh_Info_Suscripcion_Proceso",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Proceso": "COSTOS_ECU",
								"SP": "admin_btc.usp_CargaInfoSuscripcion_Costos_Ecu"
							}
						}
					},
					{
						"name": "cubo_FacCostoArticulo",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ope_FacSgMovimientoInventarioDiario",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_btc].[usp_EjecutaSP]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dwh_ecu_cubo",
									"type": "String"
								},
								"IDCadenaSistemaGerente": {
									"value": {
										"value": "@pipeline().parameters.IDCadenaSistemaGerente",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pais": {
									"value": {
										"value": "@pipeline().parameters.Pais",
										"type": "Expression"
									},
									"type": "String"
								},
								"Procedimiento": {
									"value": "usp_CargaFacCostoArticulo",
									"type": "String"
								},
								"TipoCarga": {
									"value": {
										"value": "@pipeline().parameters.TipoCarga",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Carga Info Sus Planta",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "cubo_FacCostoArticulo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dwh_Info_Suscripcion_Proceso",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Proceso": "PLANTA_ECU",
								"SP": "admin_btc.usp_CargaInfoSuscripcion_Planta_Ecu"
							}
						}
					}
				],
				"parameters": {
					"IDCadenaSistemaGerente": {
						"type": "String",
						"defaultValue": "0"
					},
					"Pais": {
						"type": "String",
						"defaultValue": "ECU"
					},
					"TipoCarga": {
						"type": "String",
						"defaultValue": "MANUAL"
					}
				},
				"folder": {
					"name": "dwh_OperacionesEcu"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dsa_SistemaGerente_Arg_Transaccional_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ArticuloBodega",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[ArticuloBodega]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[ArticuloBodega]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,Cod_Art_Bodega,Cod_Bodega,Cod_Articulo,Cantidad_Disponible,Minimo,Maximo,Costo_Compra,Costo_Inventario,Estado,Stock_Min,Stock_Max,Obligatorio,YEAR('@{pipeline().parameters.FechaDesde}') AS Anio FROM dbo.ArticuloBodega WHERE Cod_Bodega IS NOT NULL",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Art_Bodega",
											"type": "Int32"
										},
										{
											"name": "Cod_Bodega",
											"type": "Int32"
										},
										{
											"name": "Cod_Articulo",
											"type": "String"
										},
										{
											"name": "Cantidad_Disponible",
											"type": "Double"
										},
										{
											"name": "Minimo",
											"type": "Double"
										},
										{
											"name": "Maximo",
											"type": "Double"
										},
										{
											"name": "Costo_Compra",
											"type": "Double"
										},
										{
											"name": "Costo_Inventario",
											"type": "Double"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "Stock_Min",
											"type": "Double"
										},
										{
											"name": "Stock_Max",
											"type": "Double"
										},
										{
											"name": "Obligatorio",
											"type": "Boolean"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dbo].[ArticuloBodega]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Art_Bodega",
											"type": "Int32"
										},
										{
											"name": "Cod_Bodega",
											"type": "Int32"
										},
										{
											"name": "Cod_Articulo",
											"type": "String"
										},
										{
											"name": "Cantidad_Disponible",
											"type": "Double"
										},
										{
											"name": "Minimo",
											"type": "Double"
										},
										{
											"name": "Maximo",
											"type": "Double"
										},
										{
											"name": "Costo_Compra",
											"type": "Double"
										},
										{
											"name": "Costo_Inventario",
											"type": "Double"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "Stock_Min",
											"type": "Double"
										},
										{
											"name": "Stock_Max",
											"type": "Double"
										},
										{
											"name": "Obligatorio",
											"type": "Boolean"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[ArticuloBodega]"
								}
							}
						]
					},
					{
						"name": "AuditTrans",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[AuditTrans]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[AuditTrans]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,Cod_Audit,Cod_Restaurante,Cod_Usuario,Fecha_Audit,Modulo,Descripcion,Accion,YEAR(Fecha_Audit) AS Anio FROM dbo.AuditTrans WHERE Fecha_Audit >= '@{pipeline().parameters.FechaDesde}' AND Fecha_Audit < DATEADD(DAY,2,'@{pipeline().parameters.FechaHasta}')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Audit",
											"type": "Guid"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Cod_Usuario",
											"type": "Int32"
										},
										{
											"name": "Fecha_Audit",
											"type": "DateTime"
										},
										{
											"name": "Modulo",
											"type": "String"
										},
										{
											"name": "Descripcion",
											"type": "String"
										},
										{
											"name": "Accion",
											"type": "String"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dbo].[AuditTrans]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Audit",
											"type": "Guid"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Cod_Usuario",
											"type": "Int32"
										},
										{
											"name": "Fecha_Audit",
											"type": "DateTime"
										},
										{
											"name": "Modulo",
											"type": "String"
										},
										{
											"name": "Descripcion",
											"type": "String"
										},
										{
											"name": "Accion",
											"type": "String"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[AuditTrans]"
								}
							}
						]
					},
					{
						"name": "CabPedidos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[CabPedidos]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[CabPedidos]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,Cod_Pedido,Cod_Estado,Cod_Restaurante,Cod_Proveedor,Fecha_Pedido,Fecha_Recepcion,Relacionado,Tipo,Proyectado,Fecha_Recepcion_inicial,TipoCompra,YEAR(Fecha_Pedido) AS Anio FROM dbo.CabPedidos WHERE Fecha_Pedido >= '@{pipeline().parameters.FechaDesde}' AND Fecha_Pedido < DATEADD(DAY,1,'@{pipeline().parameters.FechaHasta}')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Pedido",
											"type": "String"
										},
										{
											"name": "Cod_Estado",
											"type": "Int32"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Cod_Proveedor",
											"type": "Int32"
										},
										{
											"name": "Fecha_Pedido",
											"type": "DateTime"
										},
										{
											"name": "Fecha_Recepcion",
											"type": "DateTime"
										},
										{
											"name": "Relacionado",
											"type": "String"
										},
										{
											"name": "Tipo",
											"type": "String"
										},
										{
											"name": "Proyectado",
											"type": "String"
										},
										{
											"name": "Fecha_Recepcion_inicial",
											"type": "DateTime"
										},
										{
											"name": "TipoCompra",
											"type": "String"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dbo].[CabPedidos]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Pedido",
											"type": "String"
										},
										{
											"name": "Cod_Estado",
											"type": "Int32"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Cod_Proveedor",
											"type": "Int32"
										},
										{
											"name": "Fecha_Pedido",
											"type": "DateTime"
										},
										{
											"name": "Fecha_Recepcion",
											"type": "DateTime"
										},
										{
											"name": "Relacionado",
											"type": "String"
										},
										{
											"name": "Tipo",
											"type": "String"
										},
										{
											"name": "Proyectado",
											"type": "String"
										},
										{
											"name": "Fecha_Recepcion_inicial",
											"type": "DateTime"
										},
										{
											"name": "TipoCompra",
											"type": "String"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[CabPedidos]"
								}
							}
						]
					},
					{
						"name": "CajaChica",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[CajaChica]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[CajaChica]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,Num_CajaChica,Cod_Rubros,Cod_Restaurante,Fecha,Descripcion,Total,Estado,Cod_Proveedor,Cod_Cajero,Cod_SubRubros,YEAR(Fecha) AS Anio FROM dbo.CajaChica WHERE Fecha >= '@{pipeline().parameters.FechaDesde}' AND Fecha < DATEADD(DAY,1,'@{pipeline().parameters.FechaHasta}')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Num_CajaChica",
											"type": "String"
										},
										{
											"name": "Cod_Rubros",
											"type": "String"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Fecha",
											"type": "DateTime"
										},
										{
											"name": "Descripcion",
											"type": "String"
										},
										{
											"name": "Total",
											"type": "Double"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "Cod_Proveedor",
											"type": "Int32"
										},
										{
											"name": "Cod_Cajero",
											"type": "String"
										},
										{
											"name": "Cod_SubRubros",
											"type": "String"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dbo].[CajaChica]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Num_CajaChica",
											"type": "String"
										},
										{
											"name": "Cod_Rubros",
											"type": "String"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Fecha",
											"type": "DateTime"
										},
										{
											"name": "Descripcion",
											"type": "String"
										},
										{
											"name": "Total",
											"type": "Double"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "Cod_Proveedor",
											"type": "Int32"
										},
										{
											"name": "Cod_Cajero",
											"type": "String"
										},
										{
											"name": "Cod_SubRubros",
											"type": "String"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[CajaChica]"
								}
							}
						]
					},
					{
						"name": "CierreCajas",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[CierreCajas]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[CierreCajas]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,Cod_Cierre,Cod_Restaurante,Fecha,Iva,Servicios,Venta_Neta,Venta_Bruta,Transacciones,Tipo,Estado,Importado,Sobrante,Total_Tarjetas,Total_Credito,Total_Debito,Total_Alimento,Total_Ticket,TPVP_CAutomatico,TIVA_CAutomatico,Cant_CAutomatico,Estado_Pixel,VentaCero,Compensacion,YEAR(Fecha) AS Anio FROM dbo.CierreCajas WHERE Fecha >= '@{pipeline().parameters.FechaDesde}' AND Fecha < DATEADD(DAY,1,'@{pipeline().parameters.FechaHasta}')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Cierre",
											"type": "String"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Fecha",
											"type": "DateTime"
										},
										{
											"name": "Iva",
											"type": "Double"
										},
										{
											"name": "Servicios",
											"type": "Double"
										},
										{
											"name": "Venta_Neta",
											"type": "Double"
										},
										{
											"name": "Venta_Bruta",
											"type": "Double"
										},
										{
											"name": "Transacciones",
											"type": "Double"
										},
										{
											"name": "Tipo",
											"type": "Int32"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "Importado",
											"type": "Int32"
										},
										{
											"name": "Sobrante",
											"type": "Double"
										},
										{
											"name": "Total_Tarjetas",
											"type": "Double"
										},
										{
											"name": "Total_Credito",
											"type": "Double"
										},
										{
											"name": "Total_Debito",
											"type": "Double"
										},
										{
											"name": "Total_Alimento",
											"type": "Double"
										},
										{
											"name": "Total_Ticket",
											"type": "Double"
										},
										{
											"name": "TPVP_CAutomatico",
											"type": "Double"
										},
										{
											"name": "TIVA_CAutomatico",
											"type": "Double"
										},
										{
											"name": "Cant_CAutomatico",
											"type": "Int32"
										},
										{
											"name": "Estado_Pixel",
											"type": "Int16"
										},
										{
											"name": "VentaCero",
											"type": "Double"
										},
										{
											"name": "Compensacion",
											"type": "Double"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dbo].[CierreCajas]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Cierre",
											"type": "String"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Fecha",
											"type": "DateTime"
										},
										{
											"name": "Iva",
											"type": "Double"
										},
										{
											"name": "Servicios",
											"type": "Double"
										},
										{
											"name": "Venta_Neta",
											"type": "Double"
										},
										{
											"name": "Venta_Bruta",
											"type": "Double"
										},
										{
											"name": "Transacciones",
											"type": "Double"
										},
										{
											"name": "Tipo",
											"type": "Int32"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "Importado",
											"type": "Int32"
										},
										{
											"name": "Sobrante",
											"type": "Double"
										},
										{
											"name": "Total_Tarjetas",
											"type": "Double"
										},
										{
											"name": "Total_Credito",
											"type": "Double"
										},
										{
											"name": "Total_Debito",
											"type": "Double"
										},
										{
											"name": "Total_Alimento",
											"type": "Double"
										},
										{
											"name": "Total_Ticket",
											"type": "Double"
										},
										{
											"name": "TPVP_CAutomatico",
											"type": "Double"
										},
										{
											"name": "TIVA_CAutomatico",
											"type": "Double"
										},
										{
											"name": "Cant_CAutomatico",
											"type": "Int32"
										},
										{
											"name": "Estado_Pixel",
											"type": "Int16"
										},
										{
											"name": "VentaCero",
											"type": "Double"
										},
										{
											"name": "Compensacion",
											"type": "Double"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[CierreCajas]"
								}
							}
						]
					},
					{
						"name": "CierreChica",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[CierreChica]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[CierreChica]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,cch.Cod_CierreChica,cch.Cod_Cierre,cch.Cod_Restaurante,cch.Cod_Cajero,cch.Desde,cch.Hasta,cch.Total,cch.Estado,cch.Importado,YEAR(ccj.Fecha) AS Anio FROM dbo.CierreChica cch INNER JOIN dbo.CierreCajas ccj ON cch.Cod_Cierre = ccj.Cod_Cierre WHERE ccj.Fecha >= '@{pipeline().parameters.FechaDesde}' AND ccj.Fecha < DATEADD(DAY,1,'@{pipeline().parameters.FechaHasta}')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_CierreChica",
											"type": "String"
										},
										{
											"name": "Cod_Cierre",
											"type": "String"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Cod_Cajero",
											"type": "String"
										},
										{
											"name": "Desde",
											"type": "DateTime"
										},
										{
											"name": "Hasta",
											"type": "DateTime"
										},
										{
											"name": "Total",
											"type": "Double"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "Importado",
											"type": "Int32"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dbo].[CierreChica]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_CierreChica",
											"type": "String"
										},
										{
											"name": "Cod_Cierre",
											"type": "String"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Cod_Cajero",
											"type": "String"
										},
										{
											"name": "Desde",
											"type": "DateTime"
										},
										{
											"name": "Hasta",
											"type": "DateTime"
										},
										{
											"name": "Total",
											"type": "Double"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "Importado",
											"type": "Int32"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[CierreChica]"
								}
							}
						]
					},
					{
						"name": "Costos_Historicos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[Costos_Historicos]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[Costos_Historicos]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,Cod_CostHist,Cod_Toma_Fisica,Cod_Art_Bodega,Costo,Fecha,Estado,Cod_Articulo,Cantidad,Tipo,Cod_Restaurante,Cod_Bodega,Costo_Recalculado,CostoReal,YEAR(Fecha) AS Anio FROM dbo.Costos_Historicos WHERE Fecha >= DATEADD(DAY,-2,'@{pipeline().parameters.FechaDesde}') AND Fecha < DATEADD(DAY,1,'@{pipeline().parameters.FechaHasta}') AND YEAR(Fecha) = YEAR('@{pipeline().parameters.FechaDesde}')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_CostHist",
											"type": "Guid"
										},
										{
											"name": "Cod_Toma_Fisica",
											"type": "Guid"
										},
										{
											"name": "Cod_Art_Bodega",
											"type": "Int32"
										},
										{
											"name": "Costo",
											"type": "Double"
										},
										{
											"name": "Fecha",
											"type": "DateTime"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "Cod_Articulo",
											"type": "String"
										},
										{
											"name": "Cantidad",
											"type": "Double"
										},
										{
											"name": "Tipo",
											"type": "String"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Cod_Bodega",
											"type": "Int32"
										},
										{
											"name": "Costo_Recalculado",
											"type": "Double"
										},
										{
											"name": "CostoReal",
											"type": "Double"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dbo].[Costos_Historicos]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_CostHist",
											"type": "Guid"
										},
										{
											"name": "Cod_Toma_Fisica",
											"type": "Guid"
										},
										{
											"name": "Cod_Art_Bodega",
											"type": "Int32"
										},
										{
											"name": "Costo",
											"type": "Double"
										},
										{
											"name": "Fecha",
											"type": "DateTime"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "Cod_Articulo",
											"type": "String"
										},
										{
											"name": "Cantidad",
											"type": "Double"
										},
										{
											"name": "Tipo",
											"type": "String"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Cod_Bodega",
											"type": "Int32"
										},
										{
											"name": "Costo_Recalculado",
											"type": "Double"
										},
										{
											"name": "CostoReal",
											"type": "Double"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[Costos_Historicos]"
								}
							}
						]
					},
					{
						"name": "Depositos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[Depositos]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[Depositos]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,Cod_Deposito,Num_Papeleta,Cod_CtaBanco,Cod_Restaurante,Fecha,Fecha_Cierre,Efectivo_Banco,Monedas_Tevcol,Num_Cheques,Valor_Cheques,Estado,Fecha_Acreditacion,Estado_Acreditacion,Fecha_Juliana,Moneda,Testigo,Gerente,YEAR(Fecha_Cierre) AS Anio FROM dbo.Depositos WHERE Fecha_Cierre >= '@{pipeline().parameters.FechaDesde}' AND Fecha_Cierre < DATEADD(DAY,1,'@{pipeline().parameters.FechaHasta}')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Deposito",
											"type": "String"
										},
										{
											"name": "Num_Papeleta",
											"type": "String"
										},
										{
											"name": "Cod_CtaBanco",
											"type": "Int32"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Fecha",
											"type": "DateTime"
										},
										{
											"name": "Fecha_Cierre",
											"type": "DateTime"
										},
										{
											"name": "Efectivo_Banco",
											"type": "Double"
										},
										{
											"name": "Monedas_Tevcol",
											"type": "Double"
										},
										{
											"name": "Num_Cheques",
											"type": "Int32"
										},
										{
											"name": "Valor_Cheques",
											"type": "Double"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "Fecha_Acreditacion",
											"type": "DateTime"
										},
										{
											"name": "Estado_Acreditacion",
											"type": "Int32"
										},
										{
											"name": "Fecha_Juliana",
											"type": "Int64"
										},
										{
											"name": "Moneda",
											"type": "String"
										},
										{
											"name": "Testigo",
											"type": "String"
										},
										{
											"name": "Gerente",
											"type": "String"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dbo].[Depositos]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Deposito",
											"type": "String"
										},
										{
											"name": "Num_Papeleta",
											"type": "String"
										},
										{
											"name": "Cod_CtaBanco",
											"type": "Int32"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Fecha",
											"type": "DateTime"
										},
										{
											"name": "Fecha_Cierre",
											"type": "DateTime"
										},
										{
											"name": "Efectivo_Banco",
											"type": "Double"
										},
										{
											"name": "Monedas_Tevcol",
											"type": "Double"
										},
										{
											"name": "Num_Cheques",
											"type": "Int32"
										},
										{
											"name": "Valor_Cheques",
											"type": "Double"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "Fecha_Acreditacion",
											"type": "DateTime"
										},
										{
											"name": "Estado_Acreditacion",
											"type": "Int32"
										},
										{
											"name": "Fecha_Juliana",
											"type": "Int64"
										},
										{
											"name": "Moneda",
											"type": "String"
										},
										{
											"name": "Testigo",
											"type": "String"
										},
										{
											"name": "Gerente",
											"type": "String"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[Depositos]"
								}
							}
						]
					},
					{
						"name": "DetPedidos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[DetPedidos]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[DetPedidos]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,det.Cod_DetPedido,det.Cod_Pedido,det.Cod_Art_Bodega,det.Cantidad_Item,det.Costo_Pedido,det.Cantidad_item_inicial,YEAR(cab.Fecha_Pedido) AS Anio FROM dbo.DetPedidos det INNER JOIN dbo.CabPedidos cab ON cab.Cod_Pedido=det.Cod_Pedido WHERE cab.Fecha_Pedido >= '@{pipeline().parameters.FechaDesde}' AND cab.Fecha_Pedido < DATEADD(DAY,1,'@{pipeline().parameters.FechaHasta}')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_DetPedido",
											"type": "Guid"
										},
										{
											"name": "Cod_Pedido",
											"type": "String"
										},
										{
											"name": "Cod_Art_Bodega",
											"type": "Int32"
										},
										{
											"name": "Cantidad_Item",
											"type": "Double"
										},
										{
											"name": "Costo_Pedido",
											"type": "Double"
										},
										{
											"name": "Cantidad_item_inicial",
											"type": "Double"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dbo].[DetPedidos]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_DetPedido",
											"type": "Guid"
										},
										{
											"name": "Cod_Pedido",
											"type": "String"
										},
										{
											"name": "Cod_Art_Bodega",
											"type": "Int32"
										},
										{
											"name": "Cantidad_Item",
											"type": "Double"
										},
										{
											"name": "Costo_Pedido",
											"type": "Double"
										},
										{
											"name": "Cantidad_item_inicial",
											"type": "Double"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[DetPedidos]"
								}
							}
						]
					},
					{
						"name": "DinTrans",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[DinTrans]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[DinTrans]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,Cod_Cajero,Cod_Cierre,Num_Anticipo,Num_CCC,Cta_Axapta,Cod_Cupon,Cod_Deposito,Cod_FormaPago,Cod_Restaurante,Num_CajaChica,Fecha,Valor,Num_Trans,Cod_Cliente,Recap,Cupon_Automatico,YEAR(Fecha) AS Anio FROM dbo.DinTrans WHERE Fecha >= '@{pipeline().parameters.FechaDesde}' AND Fecha < DATEADD(DAY,1,'@{pipeline().parameters.FechaHasta}')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Cajero",
											"type": "String"
										},
										{
											"name": "Cod_Cierre",
											"type": "String"
										},
										{
											"name": "Num_Anticipo",
											"type": "String"
										},
										{
											"name": "Num_CCC",
											"type": "Int32"
										},
										{
											"name": "Cta_Axapta",
											"type": "String"
										},
										{
											"name": "Cod_Cupon",
											"type": "Guid"
										},
										{
											"name": "Cod_Deposito",
											"type": "String"
										},
										{
											"name": "Cod_FormaPago",
											"type": "Int32"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Num_CajaChica",
											"type": "String"
										},
										{
											"name": "Fecha",
											"type": "DateTime"
										},
										{
											"name": "Valor",
											"type": "Double"
										},
										{
											"name": "Num_Trans",
											"type": "Int32"
										},
										{
											"name": "Cod_Cliente",
											"type": "Int32"
										},
										{
											"name": "Recap",
											"type": "String"
										},
										{
											"name": "Cupon_Automatico",
											"type": "String"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dbo].[DinTrans]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Cajero",
											"type": "String"
										},
										{
											"name": "Cod_Cierre",
											"type": "String"
										},
										{
											"name": "Num_Anticipo",
											"type": "String"
										},
										{
											"name": "Num_CCC",
											"type": "Int32"
										},
										{
											"name": "Cta_Axapta",
											"type": "String"
										},
										{
											"name": "Cod_Cupon",
											"type": "String"
										},
										{
											"name": "Cod_Deposito",
											"type": "String"
										},
										{
											"name": "Cod_FormaPago",
											"type": "Int32"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Num_CajaChica",
											"type": "String"
										},
										{
											"name": "Fecha",
											"type": "DateTime"
										},
										{
											"name": "Valor",
											"type": "Double"
										},
										{
											"name": "Num_Trans",
											"type": "Int32"
										},
										{
											"name": "Cod_Cliente",
											"type": "Int32"
										},
										{
											"name": "Recap",
											"type": "String"
										},
										{
											"name": "Cupon_Automatico",
											"type": "String"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[DinTrans]"
								}
							}
						]
					},
					{
						"name": "Estado_PyG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[Estado_PyG]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[Estado_PyG]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,Mes,Anio,Estado,Cod_Estado,Cod_Restaurante,Fecha_Creacion FROM dbo.Estado_PyG WHERE DATEFROMPARTS(anio,mes,1) >= '@{pipeline().parameters.FechaDesde}' AND DATEFROMPARTS(anio,mes,1) < DATEADD(DAY,1,'@{pipeline().parameters.FechaHasta}')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Mes",
											"type": "Int32"
										},
										{
											"name": "Anio",
											"type": "Int32"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "Cod_Estado",
											"type": "String"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Fecha_Creacion",
											"type": "DateTime"
										}
									],
									"cw_tableName": "[[dbo].[Estado_PyG]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Mes",
											"type": "Int32"
										},
										{
											"name": "Anio",
											"type": "Int32"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "Cod_Estado",
											"type": "String"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Fecha_Creacion",
											"type": "DateTime"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[Estado_PyG]"
								}
							}
						]
					},
					{
						"name": "GastosGenerales",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[GastosGenerales]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[GastosGenerales]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,Cod_Gasto,Cod_Restaurante,Cod_Rubros,Cod_Proveedor,Fecha,Cta_Axapta,Num_Factura,Subtotal,Iva,Porcen_Iva,Total,Descripcion,Estado,DiarioAX,Ruta,Cod_Tipo_Gastos,YEAR(Fecha) AS Anio FROM dbo.GastosGenerales WHERE Fecha >= '@{pipeline().parameters.FechaDesde}' AND Fecha < DATEADD(DAY,1,'@{pipeline().parameters.FechaHasta}')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Gasto",
											"type": "String"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Cod_Rubros",
											"type": "String"
										},
										{
											"name": "Cod_Proveedor",
											"type": "Int32"
										},
										{
											"name": "Fecha",
											"type": "DateTime"
										},
										{
											"name": "Cta_Axapta",
											"type": "String"
										},
										{
											"name": "Num_Factura",
											"type": "String"
										},
										{
											"name": "Subtotal",
											"type": "Double"
										},
										{
											"name": "Iva",
											"type": "Double"
										},
										{
											"name": "Porcen_Iva",
											"type": "Double"
										},
										{
											"name": "Total",
											"type": "Double"
										},
										{
											"name": "Descripcion",
											"type": "String"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "DiarioAX",
											"type": "String"
										},
										{
											"name": "Ruta",
											"type": "String"
										},
										{
											"name": "Cod_Tipo_Gastos",
											"type": "Int32"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dbo].[GastosGenerales]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Gasto",
											"type": "String"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Cod_Rubros",
											"type": "String"
										},
										{
											"name": "Cod_Proveedor",
											"type": "Int32"
										},
										{
											"name": "Fecha",
											"type": "DateTime"
										},
										{
											"name": "Cta_Axapta",
											"type": "String"
										},
										{
											"name": "Num_Factura",
											"type": "String"
										},
										{
											"name": "Subtotal",
											"type": "Double"
										},
										{
											"name": "Iva",
											"type": "Double"
										},
										{
											"name": "Porcen_Iva",
											"type": "Double"
										},
										{
											"name": "Total",
											"type": "Double"
										},
										{
											"name": "Descripcion",
											"type": "String"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "DiarioAX",
											"type": "String"
										},
										{
											"name": "Ruta",
											"type": "String"
										},
										{
											"name": "Cod_Tipo_Gastos",
											"type": "Int32"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[GastosGenerales]"
								}
							}
						]
					},
					{
						"name": "InvMovimiento",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[InvMovimiento]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[InvMovimiento]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,Cod_Restaurante,Cod_Art_Bodega,Cod_Unidad,Valor,Cantidad,Cod_Grupo,Costo,Tipo_Mov,Cod_Mov_Inv,Fecha,ValorReal,CostoReal,YEAR(Fecha) AS Anio FROM dbo.InvMovimiento WHERE Fecha >= '@{pipeline().parameters.FechaDesde}' AND Fecha < DATEADD(DAY,1,'@{pipeline().parameters.FechaHasta}') AND Tipo_Mov!=6",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Cod_Art_Bodega",
											"type": "Int32"
										},
										{
											"name": "Cod_Unidad",
											"type": "String"
										},
										{
											"name": "Valor",
											"type": "Double"
										},
										{
											"name": "Cantidad",
											"type": "Double"
										},
										{
											"name": "Cod_Grupo",
											"type": "String"
										},
										{
											"name": "Costo",
											"type": "Double"
										},
										{
											"name": "Tipo_Mov",
											"type": "String"
										},
										{
											"name": "Cod_Mov_Inv",
											"type": "String"
										},
										{
											"name": "Fecha",
											"type": "DateTime"
										},
										{
											"name": "ValorReal",
											"type": "Double"
										},
										{
											"name": "CostoReal",
											"type": "Double"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dbo].[InvMovimiento]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Cod_Art_Bodega",
											"type": "Int32"
										},
										{
											"name": "Cod_Unidad",
											"type": "String"
										},
										{
											"name": "Valor",
											"type": "Double"
										},
										{
											"name": "Cantidad",
											"type": "Double"
										},
										{
											"name": "Cod_Grupo",
											"type": "String"
										},
										{
											"name": "Costo",
											"type": "Double"
										},
										{
											"name": "Tipo_Mov",
											"type": "String"
										},
										{
											"name": "Cod_Mov_Inv",
											"type": "String"
										},
										{
											"name": "Fecha",
											"type": "DateTime"
										},
										{
											"name": "ValorReal",
											"type": "Double"
										},
										{
											"name": "CostoReal",
											"type": "Double"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[InvMovimiento]"
								}
							}
						]
					},
					{
						"name": "MixCab",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[MixCab]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[MixCab]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,Cod_MixCab,Cod_Restaurante,Fecha,Estado,Cod_Mov_Inv,YEAR(Fecha) AS Anio FROM dbo.MixCab WHERE Fecha >= '@{pipeline().parameters.FechaDesde}' AND Fecha < DATEADD(DAY,1,'@{pipeline().parameters.FechaHasta}')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_MixCab",
											"type": "String"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Fecha",
											"type": "DateTime"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "Cod_Mov_Inv",
											"type": "String"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dbo].[MixCab]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_MixCab",
											"type": "String"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Fecha",
											"type": "DateTime"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "Cod_Mov_Inv",
											"type": "String"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[MixCab]"
								}
							}
						]
					},
					{
						"name": "MixTrans",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[MixTrans]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[MixTrans]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,mtra.Cod_MixCab,mtra.Cod_Plu,mtra.Cantidad,mtra.PrecioB,mtra.TotalB,mtra.PrecioN,mtra.TotalN,mtra.Costo,mtra.Porcentual_Mix,mtra.Porcentual_Costo,mtra.Contribucion,YEAR(mcab.Fecha) AS Anio FROM dbo.MixTrans mtra INNER JOIN dbo.MixCab mcab ON mcab.cod_mixCab = mtra.Cod_MixCab WHERE mcab.Fecha >= '@{pipeline().parameters.FechaDesde}' AND mcab.Fecha < DATEADD(DAY,1,'@{pipeline().parameters.FechaHasta}')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_MixCab",
											"type": "String"
										},
										{
											"name": "Cod_Plu",
											"type": "Int32"
										},
										{
											"name": "Cantidad",
											"type": "Double"
										},
										{
											"name": "PrecioB",
											"type": "Double"
										},
										{
											"name": "TotalB",
											"type": "Double"
										},
										{
											"name": "PrecioN",
											"type": "Double"
										},
										{
											"name": "TotalN",
											"type": "Double"
										},
										{
											"name": "Costo",
											"type": "Double"
										},
										{
											"name": "Porcentual_Mix",
											"type": "Double"
										},
										{
											"name": "Porcentual_Costo",
											"type": "Double"
										},
										{
											"name": "Contribucion",
											"type": "Double"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dbo].[MixTrans]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_MixCab",
											"type": "String"
										},
										{
											"name": "Cod_Plu",
											"type": "Int32"
										},
										{
											"name": "Cantidad",
											"type": "Double"
										},
										{
											"name": "PrecioB",
											"type": "Double"
										},
										{
											"name": "TotalB",
											"type": "Double"
										},
										{
											"name": "PrecioN",
											"type": "Double"
										},
										{
											"name": "TotalN",
											"type": "Double"
										},
										{
											"name": "Costo",
											"type": "Double"
										},
										{
											"name": "Porcentual_Mix",
											"type": "Double"
										},
										{
											"name": "Porcentual_Costo",
											"type": "Double"
										},
										{
											"name": "Contribucion",
											"type": "Double"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[MixTrans]"
								}
							}
						]
					},
					{
						"name": "MovInv",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[MovInv]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[MovInv]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,Cod_Mov_Inv,Cod_Bodega,Cod_Proveedor,Cod_Restaurante,Cod_Contraparte,Cod_TipMovInv,Fecha_Creacion,Comentario,Estado,FacturaNumero,Relacionado,DiarioAX,Ruta,Cod_Pedido,Cod_Grupo_Merma,YEAR(Fecha_Creacion) AS Anio FROM dbo.MovInv SELECT GETDATE() AS FechaCarga,Cod_Mov_Inv,Cod_Bodega,Cod_Proveedor,Cod_Restaurante,Cod_Contraparte,Cod_TipMovInv,Fecha_Creacion,Comentario,Estado,FacturaNumero,Relacionado,DiarioAX,Ruta,YEAR(Fecha_Creacion) AS Anio FROM dbo.MovInv WHERE Fecha_Creacion >= '@{pipeline().parameters.FechaDesde}' AND Fecha_Creacion < DATEADD(DAY,1,'@{pipeline().parameters.FechaHasta}')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Mov_Inv",
											"type": "String"
										},
										{
											"name": "Cod_Bodega",
											"type": "Int32"
										},
										{
											"name": "Cod_Proveedor",
											"type": "Int32"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Cod_Contraparte",
											"type": "Int32"
										},
										{
											"name": "Cod_TipMovInv",
											"type": "Int32"
										},
										{
											"name": "Fecha_Creacion",
											"type": "DateTime"
										},
										{
											"name": "Comentario",
											"type": "String"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "FacturaNumero",
											"type": "String"
										},
										{
											"name": "Relacionado",
											"type": "String"
										},
										{
											"name": "DiarioAX",
											"type": "String"
										},
										{
											"name": "Ruta",
											"type": "String"
										},
										{
											"name": "Cod_Pedido",
											"type": "String"
										},
										{
											"name": "Cod_Grupo_Merma",
											"type": "String"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dbo].[MovInv]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Mov_Inv",
											"type": "String"
										},
										{
											"name": "Cod_Bodega",
											"type": "Int32"
										},
										{
											"name": "Cod_Proveedor",
											"type": "Int32"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Cod_Contraparte",
											"type": "Int32"
										},
										{
											"name": "Cod_TipMovInv",
											"type": "Int32"
										},
										{
											"name": "Fecha_Creacion",
											"type": "DateTime"
										},
										{
											"name": "Comentario",
											"type": "String"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "FacturaNumero",
											"type": "String"
										},
										{
											"name": "Relacionado",
											"type": "String"
										},
										{
											"name": "DiarioAX",
											"type": "String"
										},
										{
											"name": "Ruta",
											"type": "String"
										},
										{
											"name": "Cod_Pedido",
											"type": "String"
										},
										{
											"name": "Cod_Grupo_Merma",
											"type": "String"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[MovInv]"
								}
							}
						]
					},
					{
						"name": "PlusTrans",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[PlusTrans]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[PlusTrans]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,Num_Ticket,Fecha,Cod_ClientePV,Cod_Cajero,Cod_Plu,Cod_Restaurante,Cantidad,Valor,Num_Trans,Valor_Regalias,Fecha_Creacion,Descripcion,Cod_MixCab,Cupon_Automatico,VentaCero,BaseIvaTotal,BaseCeroTotal,NetaTotal,IvaTotal,BaseIvaUnitaria,BaseCeroUnitaria,NetaUnitaria,IvaUnitario,BrutaUnitaria,Descuentos,Servicio,cod_medio,rvc,YEAR(Fecha) AS Anio FROM dbo.PlusTrans WHERE Fecha >= '@{pipeline().parameters.FechaDesde}' AND Fecha < DATEADD(DAY,1,'@{pipeline().parameters.FechaHasta}')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Num_Ticket",
											"type": "Guid"
										},
										{
											"name": "Fecha",
											"type": "DateTime"
										},
										{
											"name": "Cod_ClientePV",
											"type": "Guid"
										},
										{
											"name": "Cod_Cajero",
											"type": "String"
										},
										{
											"name": "Cod_Plu",
											"type": "Int32"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Cantidad",
											"type": "Double"
										},
										{
											"name": "Valor",
											"type": "Double"
										},
										{
											"name": "Num_Trans",
											"type": "Int32"
										},
										{
											"name": "Valor_Regalias",
											"type": "Double"
										},
										{
											"name": "Fecha_Creacion",
											"type": "DateTime"
										},
										{
											"name": "Descripcion",
											"type": "String"
										},
										{
											"name": "Cod_MixCab",
											"type": "String"
										},
										{
											"name": "Cupon_Automatico",
											"type": "Int32"
										},
										{
											"name": "VentaCero",
											"type": "Double"
										},
										{
											"name": "BaseIvaTotal",
											"type": "Double"
										},
										{
											"name": "BaseCeroTotal",
											"type": "Double"
										},
										{
											"name": "NetaTotal",
											"type": "Double"
										},
										{
											"name": "IvaTotal",
											"type": "Double"
										},
										{
											"name": "BaseIvaUnitaria",
											"type": "Double"
										},
										{
											"name": "BaseCeroUnitaria",
											"type": "Double"
										},
										{
											"name": "NetaUnitaria",
											"type": "Double"
										},
										{
											"name": "IvaUnitario",
											"type": "Double"
										},
										{
											"name": "BrutaUnitaria",
											"type": "Double"
										},
										{
											"name": "Descuentos",
											"type": "Double"
										},
										{
											"name": "Servicio",
											"type": "Double"
										},
										{
											"name": "cod_medio",
											"type": "Int32"
										},
										{
											"name": "rvc",
											"type": "String"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dbo].[PlusTrans]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Num_Ticket",
											"type": "String"
										},
										{
											"name": "Fecha",
											"type": "DateTime"
										},
										{
											"name": "Cod_ClientePV",
											"type": "String"
										},
										{
											"name": "Cod_Cajero",
											"type": "String"
										},
										{
											"name": "Cod_Plu",
											"type": "Int32"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Cantidad",
											"type": "Double"
										},
										{
											"name": "Valor",
											"type": "Double"
										},
										{
											"name": "Num_Trans",
											"type": "Int32"
										},
										{
											"name": "Valor_Regalias",
											"type": "Double"
										},
										{
											"name": "Fecha_Creacion",
											"type": "DateTime"
										},
										{
											"name": "Descripcion",
											"type": "String"
										},
										{
											"name": "Cod_MixCab",
											"type": "String"
										},
										{
											"name": "Cupon_Automatico",
											"type": "Int32"
										},
										{
											"name": "VentaCero",
											"type": "Double"
										},
										{
											"name": "BaseIvaTotal",
											"type": "Double"
										},
										{
											"name": "BaseCeroTotal",
											"type": "Double"
										},
										{
											"name": "NetaTotal",
											"type": "Double"
										},
										{
											"name": "IvaTotal",
											"type": "Double"
										},
										{
											"name": "BaseIvaUnitaria",
											"type": "Double"
										},
										{
											"name": "BaseCeroUnitaria",
											"type": "Double"
										},
										{
											"name": "NetaUnitaria",
											"type": "Double"
										},
										{
											"name": "IvaUnitario",
											"type": "Double"
										},
										{
											"name": "BrutaUnitaria",
											"type": "Double"
										},
										{
											"name": "Descuentos",
											"type": "Double"
										},
										{
											"name": "Servicio",
											"type": "Double"
										},
										{
											"name": "cod_medio",
											"type": "Int32"
										},
										{
											"name": "rvc",
											"type": "String"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[PlusTrans]"
								}
							}
						]
					},
					{
						"name": "Porcentuales",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[Porcentuales]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[Porcentuales]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,Cod_Porcentuales,Descripcion,Estado,Orden_Porcentual,Diario,YEAR('@{pipeline().parameters.FechaDesde}') AS Anio FROM dbo.Porcentuales",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Porcentuales",
											"type": "Int32"
										},
										{
											"name": "Descripcion",
											"type": "String"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "Orden_Porcentual",
											"type": "Int32"
										},
										{
											"name": "Diario",
											"type": "Int32"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dbo].[Porcentuales]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Porcentuales",
											"type": "Int32"
										},
										{
											"name": "Descripcion",
											"type": "String"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "Orden_Porcentual",
											"type": "Int32"
										},
										{
											"name": "Diario",
											"type": "Int32"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[Porcentuales]"
								}
							}
						]
					},
					{
						"name": "Porcentuales_Restaurante",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[Porcentuales_Restaurante]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[Porcentuales_Restaurante]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,Cod_Porcentuales_Res,Cod_Restaurante,Cod_Porcentuales,Cod_Multiple,Valor,Cod_Grupo,Estado,YEAR('@{pipeline().parameters.FechaDesde}') AS Anio FROM dbo.Porcentuales_Restaurante",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Porcentuales_Res",
											"type": "Int32"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Cod_Porcentuales",
											"type": "Int32"
										},
										{
											"name": "Cod_Multiple",
											"type": "Int32"
										},
										{
											"name": "Valor",
											"type": "Double"
										},
										{
											"name": "Cod_Grupo",
											"type": "Int32"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dbo].[Porcentuales_Restaurante]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Porcentuales_Res",
											"type": "Int32"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Cod_Porcentuales",
											"type": "Int32"
										},
										{
											"name": "Cod_Multiple",
											"type": "Int32"
										},
										{
											"name": "Valor",
											"type": "Double"
										},
										{
											"name": "Cod_Grupo",
											"type": "Int32"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[Porcentuales_Restaurante]"
								}
							}
						]
					},
					{
						"name": "PyG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[PyG]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[PyG]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,Cod_Estado,Grupo,Descripcion,Valor,Porcentaje,Nivel,Orden,Fecha_Creacion,Mes,Anio FROM dbo.PyG WHERE DATEFROMPARTS(anio,mes,1) >= '@{pipeline().parameters.FechaDesde}' AND DATEFROMPARTS(anio,mes,1) < DATEADD(DAY,1,'@{pipeline().parameters.FechaHasta}')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Estado",
											"type": "String"
										},
										{
											"name": "Grupo",
											"type": "String"
										},
										{
											"name": "Descripcion",
											"type": "String"
										},
										{
											"name": "Valor",
											"type": "Double"
										},
										{
											"name": "Porcentaje",
											"type": "Double"
										},
										{
											"name": "Nivel",
											"type": "Int32"
										},
										{
											"name": "Orden",
											"type": "Int32"
										},
										{
											"name": "Fecha_Creacion",
											"type": "DateTime"
										},
										{
											"name": "Mes",
											"type": "Int32"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dbo].[PyG]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Estado",
											"type": "String"
										},
										{
											"name": "Grupo",
											"type": "String"
										},
										{
											"name": "Descripcion",
											"type": "String"
										},
										{
											"name": "Valor",
											"type": "Double"
										},
										{
											"name": "Porcentaje",
											"type": "Double"
										},
										{
											"name": "Nivel",
											"type": "Int32"
										},
										{
											"name": "Orden",
											"type": "Int32"
										},
										{
											"name": "Fecha_Creacion",
											"type": "DateTime"
										},
										{
											"name": "Mes",
											"type": "Int32"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[PyG]"
								}
							}
						]
					},
					{
						"name": "TomaFisica",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[TomaFisica]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[TomaFisica]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,Cod_Toma_Fisica,Cod_Restaurante,Num_MovInv,Fecha,Tipo_Toma,Cod_Bodega,Estado,Todo_Art,CalculoInventario,FechaAsentado,YEAR(Fecha) AS Anio FROM dbo.TomaFisica WHERE Fecha >= DATEADD(DAY,-2,'@{pipeline().parameters.FechaDesde}') AND Fecha < DATEADD(DAY,1,'@{pipeline().parameters.FechaHasta}') AND YEAR(Fecha) = YEAR('@{pipeline().parameters.FechaDesde}')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Toma_Fisica",
											"type": "Guid"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Num_MovInv",
											"type": "String"
										},
										{
											"name": "Fecha",
											"type": "DateTime"
										},
										{
											"name": "Tipo_Toma",
											"type": "String"
										},
										{
											"name": "Cod_Bodega",
											"type": "Int32"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "Todo_Art",
											"type": "Int32"
										},
										{
											"name": "CalculoInventario",
											"type": "Int32"
										},
										{
											"name": "FechaAsentado",
											"type": "DateTime"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dbo].[TomaFisica]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Toma_Fisica",
											"type": "Guid"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Num_MovInv",
											"type": "String"
										},
										{
											"name": "Fecha",
											"type": "DateTime"
										},
										{
											"name": "Tipo_Toma",
											"type": "String"
										},
										{
											"name": "Cod_Bodega",
											"type": "Int32"
										},
										{
											"name": "Estado",
											"type": "Int32"
										},
										{
											"name": "Todo_Art",
											"type": "Int32"
										},
										{
											"name": "CalculoInventario",
											"type": "Int32"
										},
										{
											"name": "FechaAsentado",
											"type": "DateTime"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[TomaFisica]"
								}
							}
						]
					},
					{
						"name": "VentasHora",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[VentasHora]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[VentasHora]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,Cod_Hora,Cod_Restaurante,Fecha,Tiempo,Transacciones,Valor,YEAR(Fecha) AS Anio FROM dbo.VentasHora WHERE Fecha >= '@{pipeline().parameters.FechaDesde}' AND Fecha < DATEADD(DAY,1,'@{pipeline().parameters.FechaHasta}')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Hora",
											"type": "Int32"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Fecha",
											"type": "DateTime"
										},
										{
											"name": "Tiempo",
											"type": "String"
										},
										{
											"name": "Transacciones",
											"type": "Double"
										},
										{
											"name": "Valor",
											"type": "Double"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dbo].[VentasHora]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "Cod_Hora",
											"type": "Int32"
										},
										{
											"name": "Cod_Restaurante",
											"type": "Int32"
										},
										{
											"name": "Fecha",
											"type": "DateTime"
										},
										{
											"name": "Tiempo",
											"type": "String"
										},
										{
											"name": "Transacciones",
											"type": "Double"
										},
										{
											"name": "Valor",
											"type": "Double"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[VentasHora]"
								}
							}
						]
					},
					{
						"name": "VentaXMedio",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[VentaXMedio]"
							},
							{
								"name": "Destination",
								"value": "[[dsa_arg_sg].[VentaXMedio]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS FechaCarga,cod_vtamedio,cod_cierre,fecha,cod_medio,ventaNeta,ventaBruta,transacciones,iva,cod_restaurante,rvc,YEAR(Fecha) AS Anio FROM dbo.VentaXMedio WHERE Fecha >= '@{pipeline().parameters.FechaDesde}' AND Fecha < DATEADD(DAY,1,'@{pipeline().parameters.FechaHasta}')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linked_storage",
									"type": "LinkedServiceReference"
								},
								"path": "contenedor"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SistemaGerenteArg",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "cod_vtamedio",
											"type": "Int32"
										},
										{
											"name": "cod_cierre",
											"type": "String"
										},
										{
											"name": "fecha",
											"type": "DateTime"
										},
										{
											"name": "cod_medio",
											"type": "Int32"
										},
										{
											"name": "ventaNeta",
											"type": "Double"
										},
										{
											"name": "ventaBruta",
											"type": "Double"
										},
										{
											"name": "transacciones",
											"type": "Int32"
										},
										{
											"name": "iva",
											"type": "Double"
										},
										{
											"name": "cod_restaurante",
											"type": "Int32"
										},
										{
											"name": "rvc",
											"type": "String"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dbo].[VentaXMedio]",
									"cw_servidor": {
										"value": "@pipeline().parameters.Servidor",
										"type": "Expression"
									},
									"cw_baseDatos": {
										"value": "@pipeline().parameters.BaseDatos",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dwh",
								"type": "DatasetReference",
								"parameters": {
									"cw_structure": [
										{
											"name": "FechaCarga",
											"type": "DateTime"
										},
										{
											"name": "cod_vtamedio",
											"type": "Int32"
										},
										{
											"name": "cod_cierre",
											"type": "String"
										},
										{
											"name": "fecha",
											"type": "DateTime"
										},
										{
											"name": "cod_medio",
											"type": "Int32"
										},
										{
											"name": "ventaNeta",
											"type": "Double"
										},
										{
											"name": "ventaBruta",
											"type": "Double"
										},
										{
											"name": "transacciones",
											"type": "Int32"
										},
										{
											"name": "iva",
											"type": "Double"
										},
										{
											"name": "cod_restaurante",
											"type": "Int32"
										},
										{
											"name": "rvc",
											"type": "String"
										},
										{
											"name": "Anio",
											"type": "Int32"
										}
									],
									"cw_tableName": "[[dsa_arg_sg].[VentaXMedio]"
								}
							}
						]
					}
				],
				"parameters": {
					"Servidor": {
						"type": "string",
						"defaultValue": "SAZGERENTEDB-AR"
					},
					"BaseDatos": {
						"type": "string",
						"defaultValue": "SQLGerente_19"
					},
					"FechaDesde": {
						"type": "string"
					},
					"FechaHasta": {
						"type": "string"
					}
				},
				"folder": {
					"name": "dsa_SistemaGerenteArg"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_Recarga_Vito_Ecuador')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inicializar Etapas",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "UPDATE admin_btc.LogEjecucionEtapa SET Estado='PENDIENTE'\nWHERE Periodo=CONVERT(VARCHAR(11),DATEADD(HH,-5,GETDATE()),120) AND IDEtapa IN ('FACTVITOECU')\n\nUPDATE admin_btc.LogEjecucionTabla SET Estado='PENDIENTE'\nWHERE Periodo=CONVERT(VARCHAR(11),DATEADD(HH,-5,GETDATE()),120) AND Tabla IN ('Freidora','FreidoraLocal','TipoFreidora','UsuarioLocal','FacVito') \n\n--Control de Cargas\nDELETE FROM admin_btc.CargaDataFactory\nWHERE FechaPeriodo = CAST(DATEADD(HH,-5,GETDATE()) AS DATE) AND Proceso = 'VITO ECUADOR'\n\nINSERT INTO admin_btc.CargaDataFactory\nSELECT CAST(DATEADD(HH,-5,GETDATE()) AS DATE),'VITO ECUADOR',DATEADD(HH,-5,GETDATE()),NULL,0\n\nSELECT 'ok' AS Resultado"
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Carga DSA Vito",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Inicializar Etapas",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_ListaExterna_Vito",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": "SAZSHAREPBDD\\BD_NEGOCIO",
								"BaseDatos": "SharePoint_ListaExterna"
							}
						}
					},
					{
						"name": "Carga Operacion Vito",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Carga DSA Vito",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dwh_Operaciones_Vito",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"IDCadenaSistemaGerente": "0",
								"Pais": "ECU",
								"TipoCarga": "AUTOMATICA"
							}
						}
					},
					{
						"name": "Finalizar Carga",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Carga Info Suscripcion",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "--Control de Cargas\nUPDATE admin_btc.CargaDataFactory\nSET FechaHasta = DATEADD(HH,-5,GETDATE()), Estado = 1\nWHERE FechaPeriodo =  CAST(DATEADD(HH,-5,GETDATE()) AS DATE) AND Proceso = 'VITO ECUADOR'\n\nSELECT 'ok' AS Resultado"
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Carga Info Suscripcion",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Carga Operacion Vito",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dwh_Info_Suscripcion_Proceso",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Proceso": "VITO_ECU",
								"SP": "admin_btc.usp_CargaInfoSuscripcion_Vito_Ecu"
							}
						}
					}
				],
				"folder": {
					"name": "Carga_dwh_Triggers"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dsa_App_ContabilidadRegional')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "contabilidad",
				"activities": [
					{
						"name": "Fecha Carga",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT\n\tFechaCarga=DATEADD(HH,-5,GETDATE()),\n\tFechaDesde=convert(smalldatetime,DATEADD(s,0,DATEADD(mm, DATEDIFF(m,0,DATEADD(HH,-5,GETDATE()))-3,0)),112),\n\tFechaHasta=convert(smalldatetime,EOMONTH(DATEADD(HH,-5,GETDATE()),-1),112)"
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Cargar Catalogo",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Fecha Carga",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_App_ContabilidadRegional_Catalogo",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": {
									"value": "@pipeline().parameters.Servidor",
									"type": "Expression"
								},
								"BaseDatos": {
									"value": "@pipeline().parameters.BaseDatos",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Carga Transaccional",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Cargar Catalogo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_App_ContabilidadRegional_Transaccional",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": {
									"value": "@pipeline().parameters.Servidor",
									"type": "Expression"
								},
								"BaseDatos": {
									"value": "@pipeline().parameters.BaseDatos",
									"type": "Expression"
								},
								"FechaDesde": {
									"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
									"type": "Expression"
								},
								"FechaHasta": {
									"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"Servidor": {
						"type": "string",
						"defaultValue": "SAZSHAREPBDD\\BD_NEGOCIO"
					},
					"BaseDatos": {
						"type": "string",
						"defaultValue": "SharePoint_ListaExterna"
					}
				},
				"folder": {
					"name": "dsa_Intranet"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dsa_Domicilio_Col')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DSA Colombia",
				"activities": [
					{
						"name": "Fecha Carga",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_CargaFecha]",
								"storedProcedureParameters": {
									"Dias": {
										"type": "Int32",
										"value": null
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": null
									},
									"FechaFin": {
										"type": "DateTime",
										"value": null
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": null
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Carga Transaccional",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Carga Catalogos",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_Domicilio_Col_Transaccional",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": {
									"value": "@activity('Servidor Domicilio').output.firstRow.ServidorActual1",
									"type": "Expression"
								},
								"BaseDatosDomicilio": {
									"value": "@activity('Servidor Domicilio').output.firstRow.BaseDatosActual1",
									"type": "Expression"
								},
								"BaseDatosDomicilioWeb": {
									"value": "@activity('Servidor Domicilio Web').output.firstRow.BaseDatosActual1",
									"type": "Expression"
								},
								"BaseDatosDomicilioGerente": {
									"value": "@activity('Servidor Domicilio SG').output.firstRow.BaseDatosActual1",
									"type": "Expression"
								},
								"FechaDesde": {
									"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
									"type": "Expression"
								},
								"FechaHasta": {
									"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Carga Catalogos",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Servidor Domicilio",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Servidor Domicilio Web",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Servidor Domicilio SG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_Domicilio_Col_Catalogo",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": {
									"value": "@activity('Servidor Domicilio').output.firstRow.ServidorActual1",
									"type": "Expression"
								},
								"BaseDatosDomicilio": {
									"value": "@activity('Servidor Domicilio').output.firstRow.BaseDatosActual1",
									"type": "Expression"
								},
								"BaseDatosDomicilioWeb": {
									"value": "@activity('Servidor Domicilio Web').output.firstRow.BaseDatosActual1",
									"type": "Expression"
								},
								"BaseDatosDomicilioGerente": {
									"value": "@activity('Servidor Domicilio SG').output.firstRow.BaseDatosActual1",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Servidor Domicilio",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Fecha Carga",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_ObtenerLinkedBase]",
								"storedProcedureParameters": {
									"CodigoETL": {
										"type": "String",
										"value": "BD-DOMI-COL"
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
											"type": "Expression"
										}
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Actualiza Estadistica 1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_col_domi",
									"type": "String"
								},
								"Paso": {
									"value": "1",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Actualiza Estadistica 2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_col_domi",
									"type": "String"
								},
								"Paso": {
									"value": "2",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Servidor Domicilio Web",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Fecha Carga",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_ObtenerLinkedBase]",
								"storedProcedureParameters": {
									"CodigoETL": {
										"type": "String",
										"value": "BD-DOMIWEB-COL"
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
											"type": "Expression"
										}
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Servidor Domicilio SG",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Fecha Carga",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_ObtenerLinkedBase]",
								"storedProcedureParameters": {
									"CodigoETL": {
										"type": "String",
										"value": "BD-DOMISG-COL"
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
											"type": "Expression"
										}
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"folder": {
					"name": "dsa_DomicilioCol"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dsa_DynamicsAx_Ecu')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fecha Carga",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_CargaFecha]",
								"storedProcedureParameters": {
									"Dias": {
										"type": "Int32",
										"value": null
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": null
									},
									"FechaFin": {
										"type": "DateTime",
										"value": null
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": null
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Carga Transaccional",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Carga Catalogos",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_DynamicsAx_Ecu_Transaccional",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": {
									"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
									"type": "Expression"
								},
								"BaseDatos": {
									"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
									"type": "Expression"
								},
								"FechaDesde": {
									"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
									"type": "Expression"
								},
								"FechaHasta": {
									"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Carga Catalogos",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Obtener Servidores",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_DynamicsAx_Ecu_Catalogo",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": {
									"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
									"type": "Expression"
								},
								"BaseDatos": {
									"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Obtener Servidores",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Fecha Carga",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_ObtenerLinkedBase]",
								"storedProcedureParameters": {
									"CodigoETL": {
										"type": "String",
										"value": "BD-AX-ECU"
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
											"type": "Expression"
										}
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Actualiza Estadistica 1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_ecu_ax",
									"type": "String"
								},
								"Paso": {
									"value": "1",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Actualiza Estadistica 2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_ecu_ax",
									"type": "String"
								},
								"Paso": {
									"value": "2",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Actualiza Estadistica 3",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_ecu_ax",
									"type": "String"
								},
								"Paso": {
									"value": "3",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Actualiza Estadistica 4",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_ecu_ax",
									"type": "String"
								},
								"Paso": {
									"value": "4",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "dsa_DynamicsAxEcu"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dsa_DynamicsAx_Ecu_Compras')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Carga Compras",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Obtener Servidores",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_DynamicsAx_Ecu_Transaccional_Compras",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": {
									"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
									"type": "Expression"
								},
								"BaseDatos": {
									"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
									"type": "Expression"
								},
								"FechaDesde": {
									"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
									"type": "Expression"
								},
								"FechaHasta": {
									"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Fecha Carga",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_CargaFecha]",
								"storedProcedureParameters": {
									"Dias": {
										"type": "Int32",
										"value": "3"
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": null
									},
									"FechaFin": {
										"type": "DateTime",
										"value": {
											"value": "@adddays(addhours(utcnow(),-5),1)",
											"type": "Expression"
										}
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": null
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Obtener Servidores",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Fecha Carga",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_ObtenerLinkedBase]",
								"storedProcedureParameters": {
									"CodigoETL": {
										"type": "String",
										"value": "BD-AX-ECU"
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
											"type": "Expression"
										}
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Actualiza Estadistica",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Compras",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_ecu_ax",
									"type": "String"
								},
								"Paso": {
									"value": "1",
									"type": "Int16"
								},
								"Proceso": {
									"value": "Compras",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "dsa_DynamicsAxEcu"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dsa_Maxpoint_Ecu')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Carga Catalogos",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Obtener Servidores",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_Maxpoint_Ecu_Catalogo",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": {
									"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
									"type": "Expression"
								},
								"BaseDatos": {
									"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Obtener Servidores",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Fecha Carga",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_ObtenerLinkedBase]",
								"storedProcedureParameters": {
									"CodigoETL": {
										"type": "String",
										"value": "BD-MP-ECU"
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
											"type": "Expression"
										}
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Fecha Carga",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_CargaFecha]",
								"storedProcedureParameters": {
									"Dias": {
										"type": "Int32",
										"value": null
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": null
									},
									"FechaFin": {
										"type": "DateTime",
										"value": null
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": null
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Actualiza Estadistica",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Catalogos",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_ecu_mp",
									"type": "String"
								},
								"Paso": {
									"value": "1",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "dsa_MaxPointEcu"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dsa_Sip_Ecu')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SIP",
				"activities": [
					{
						"name": "Fecha Carga",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT\n\tFechaCarga=GETDATE(),\n\tFechaDesde=MIN(Fecha),--inicia en enero +1\n\tFechaHasta=DATEADD(yy, DATEDIFF(yy, 0, GETDATE()) + 2, -1)--termina en diciembre+1\nFROM dwh_dim.Tiempo\nwhere AnioNumero52Semanas=year(DATEADD(yy, DATEDIFF(yy, 0, GETDATE())+1, 0))"
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Cargar Catalogo",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Fecha Carga",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_Sip_Ecu_Catalogo",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": "SAZCONTADB",
								"BaseDatos": "Presupuestos"
							}
						}
					},
					{
						"name": "Cargar Transaccional",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Cargar Catalogo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_Sip_Ecu_Transaccional",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": "SAZCONTADB",
								"BaseDatos": "Presupuestos",
								"FechaDesde": {
									"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
									"type": "Expression"
								},
								"FechaHasta": {
									"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Actualizar Estadisticas",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Cargar Transaccional",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "UPDATE STATISTICS [dsa_ecu_sip].[Cuentas]\nUPDATE STATISTICS [dsa_ecu_sip].[PresupuestoGastos]\nUPDATE STATISTICS [dsa_ecu_sip].[PresupuestoVentas]\nUPDATE STATISTICS [dsa_ecu_sip].[SolicitudTotal_Aprobacion]\n\nSELECT 'ok' AS Resultado"
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"folder": {
					"name": "dsa_SipEcu"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dsa_SistemaGerente_Arg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fecha Carga",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_CargaFecha]",
								"storedProcedureParameters": {
									"Dias": {
										"type": "Int32",
										"value": null
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": null
									},
									"FechaFin": {
										"type": "DateTime",
										"value": null
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": null
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Cargar Catalogo 1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Truncar Transaccional",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_SistemaGerente_Arg_Catalogo_1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": {
									"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
									"type": "Expression"
								},
								"BaseDatos": {
									"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Carga Transaccional",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Cargar Catalogo 1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Fecha Carga').output.firstRow.AnioFechaInicio, activity('Fecha Carga').output.firstRow.AnioFechaFin)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Carga Anterior",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Arg_Transaccional_1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorAnterior1",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosAnterior1",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHastaAnioAnterior",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Carga Actual_",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Carga Anterior",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Arg_Transaccional_1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesdeAnioActual",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Carga Actual",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Arg_Transaccional_1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncar Transaccional",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Obtener Servidores",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "TRUNCATE TABLE [dsa_arg_sg].[ArticuloBodega]\nTRUNCATE TABLE [dsa_arg_sg].[AuditTrans]\nTRUNCATE TABLE [dsa_arg_sg].[CabPedidos]\nTRUNCATE TABLE [dsa_arg_sg].[CajaChica]\nTRUNCATE TABLE [dsa_arg_sg].[CierreCajas]\nTRUNCATE TABLE [dsa_arg_sg].[CierreChica]\nTRUNCATE TABLE [dsa_arg_sg].[Costos_Historicos]\nTRUNCATE TABLE [dsa_arg_sg].[Depositos]\nTRUNCATE TABLE [dsa_arg_sg].[DetPedidos]\nTRUNCATE TABLE [dsa_arg_sg].[DinTrans]\nTRUNCATE TABLE [dsa_arg_sg].[Estado_PyG]\nTRUNCATE TABLE [dsa_arg_sg].[GastosGenerales]\nTRUNCATE TABLE [dsa_arg_sg].[InvMovimiento]\nTRUNCATE TABLE [dsa_arg_sg].[MixCab]\nTRUNCATE TABLE [dsa_arg_sg].[MixTrans]\nTRUNCATE TABLE [dsa_arg_sg].[MovInv]\nTRUNCATE TABLE [dsa_arg_sg].[PlusTrans]\nTRUNCATE TABLE [dsa_arg_sg].[Porcentuales]\nTRUNCATE TABLE [dsa_arg_sg].[Porcentuales_Restaurante]\nTRUNCATE TABLE [dsa_arg_sg].[PyG]\nTRUNCATE TABLE [dsa_arg_sg].[TomaFisica]\nTRUNCATE TABLE [dsa_arg_sg].[VentasHora]\nTRUNCATE TABLE [dsa_arg_sg].[VentaXMedio]\n\n\nSELECT 'ok' AS Resultado"
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Obtener Servidores",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Fecha Carga",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_ObtenerLinkedBase]",
								"storedProcedureParameters": {
									"CodigoETL": {
										"type": "String",
										"value": "BD-SG-ARG"
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
											"type": "Expression"
										}
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Actualiza Estadistica 1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_arg_sg",
									"type": "String"
								},
								"Paso": {
									"value": "1",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Actualiza Estadistica 2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_arg_sg",
									"type": "String"
								},
								"Paso": {
									"value": "2",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Actualiza Estadistica 3",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_arg_sg",
									"type": "String"
								},
								"Paso": {
									"value": "3",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Actualiza Estadistica 4",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_arg_sg",
									"type": "String"
								},
								"Paso": {
									"value": "4",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "dsa_SistemaGerenteArg"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_dsa_SistemaGerente_Arg_Transaccional_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dsa_SistemaGerente_Chl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fecha Carga",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_CargaFecha]",
								"storedProcedureParameters": {
									"Dias": {
										"type": "Int32",
										"value": null
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": null
									},
									"FechaFin": {
										"type": "DateTime",
										"value": null
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": null
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Cargar Catalogo 1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Truncar Transaccional",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_SistemaGerente_Chl_Catalogo_1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": {
									"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
									"type": "Expression"
								},
								"BaseDatos": {
									"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Carga Transaccional",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Cargar Catalogo 1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Fecha Carga').output.firstRow.AnioFechaInicio, activity('Fecha Carga').output.firstRow.AnioFechaFin)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Carga Anterior",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Chl_Transaccional_1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorAnterior1",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosAnterior1",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHastaAnioAnterior",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Carga Actual_",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Carga Anterior",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Chl_Transaccional_1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesdeAnioActual",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Carga Actual",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Chl_Transaccional_1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncar Transaccional",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Obtener Servidores",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "TRUNCATE TABLE [dsa_chl_sg].[ArticuloBodega]\nTRUNCATE TABLE [dsa_chl_sg].[AuditTrans]\nTRUNCATE TABLE [dsa_chl_sg].[CabPedidos]\nTRUNCATE TABLE [dsa_chl_sg].[CajaChica]\nTRUNCATE TABLE [dsa_chl_sg].[CierreCajas]\nTRUNCATE TABLE [dsa_chl_sg].[CierreChica]\nTRUNCATE TABLE [dsa_chl_sg].[Costos_Historicos]\nTRUNCATE TABLE [dsa_chl_sg].[CuponCliente]\nTRUNCATE TABLE [dsa_chl_sg].[Cupones]\nTRUNCATE TABLE [dsa_chl_sg].[Depositos]\nTRUNCATE TABLE [dsa_chl_sg].[DetPedidos]\nTRUNCATE TABLE [dsa_chl_sg].[DinTrans]\nTRUNCATE TABLE [dsa_chl_sg].[Estado_PyG]\nTRUNCATE TABLE [dsa_chl_sg].[GastosGenerales]\nTRUNCATE TABLE [dsa_chl_sg].[InvMovimiento]\nTRUNCATE TABLE [dsa_chl_sg].[MixCab]\nTRUNCATE TABLE [dsa_chl_sg].[MixTrans]\nTRUNCATE TABLE [dsa_chl_sg].[MovInv]\nTRUNCATE TABLE [dsa_chl_sg].[PlusCupones]\nTRUNCATE TABLE [dsa_chl_sg].[PlusTrans]\nTRUNCATE TABLE [dsa_chl_sg].[Porcentuales]\nTRUNCATE TABLE [dsa_chl_sg].[Porcentuales_Restaurante]\nTRUNCATE TABLE [dsa_chl_sg].[PyG]\nTRUNCATE TABLE [dsa_chl_sg].[TomaFisica]\nTRUNCATE TABLE [dsa_chl_sg].[VentasHora]\nTRUNCATE TABLE [dsa_chl_sg].[VentasHora_Domicilio]\nTRUNCATE TABLE [dsa_chl_sg].[VentaXMedio]\n\nSELECT 'ok' AS Resultado"
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Obtener Servidores",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Fecha Carga",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_ObtenerLinkedBase]",
								"storedProcedureParameters": {
									"CodigoETL": {
										"type": "String",
										"value": "BD-SG-CHL"
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
											"type": "Expression"
										}
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Actualiza Estadistica 1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_chl_sg",
									"type": "String"
								},
								"Paso": {
									"value": "1",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Actualiza Estadistica 2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_chl_sg",
									"type": "String"
								},
								"Paso": {
									"value": "2",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Actualiza Estadistica 3",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_chl_sg",
									"type": "String"
								},
								"Paso": {
									"value": "3",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Actualiza Estadistica 4",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_chl_sg",
									"type": "String"
								},
								"Paso": {
									"value": "4",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "dsa_SistemaGerenteChl"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dsa_SistemaGerente_Chl_Auditoria')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fecha Carga",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_CargaFecha]",
								"storedProcedureParameters": {
									"Dias": {
										"type": "Int32",
										"value": null
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": null
									},
									"FechaFin": {
										"type": "DateTime",
										"value": null
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": null
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Cargar Catalogo 1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Truncar Transaccional",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_SistemaGerente_Chl_Catalogo_1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": {
									"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
									"type": "Expression"
								},
								"BaseDatos": {
									"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Carga Transaccional",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Cargar Catalogo 1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Fecha Carga').output.firstRow.AnioFechaInicio, activity('Fecha Carga').output.firstRow.AnioFechaFin)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Carga Anterior",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Chl_Transaccional_Auditoria",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorAnterior1",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosAnterior1",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHastaAnioAnterior",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Carga Actual_",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Carga Anterior",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Chl_Transaccional_Auditoria",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesdeAnioActual",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Carga Actual",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Chl_Transaccional_Auditoria",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncar Transaccional",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Obtener Servidores",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "TRUNCATE TABLE [dsa_chl_sg].[ArticuloBodega]\nTRUNCATE TABLE [dsa_chl_sg].[CierreCajas]\nTRUNCATE TABLE [dsa_chl_sg].[CierreChica]\nTRUNCATE TABLE [dsa_chl_sg].[Depositos]\nTRUNCATE TABLE [dsa_chl_sg].[DinTrans]\nTRUNCATE TABLE [dsa_chl_sg].[InvMovimiento]\nTRUNCATE TABLE [dsa_chl_sg].[MovInv]\nTRUNCATE TABLE [dsa_chl_sg].[PlusTrans]\nTRUNCATE TABLE [dsa_chl_sg].[Porcentuales]\nTRUNCATE TABLE [dsa_chl_sg].[Porcentuales_Restaurante]\n\nSELECT 'ok' AS Resultado"
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Obtener Servidores",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Fecha Carga",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_ObtenerLinkedBase]",
								"storedProcedureParameters": {
									"CodigoETL": {
										"type": "String",
										"value": "BD-SG-CHL"
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
											"type": "Expression"
										}
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Actualiza Estadistica 1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_chl_sg",
									"type": "String"
								},
								"Paso": {
									"value": "1",
									"type": "Int16"
								},
								"Proceso": {
									"value": "Auditoria",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Actualiza Estadistica 2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_chl_sg",
									"type": "String"
								},
								"Paso": {
									"value": "2",
									"type": "Int16"
								},
								"Proceso": {
									"value": "Auditoria",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Actualiza Estadistica 3",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_chl_sg",
									"type": "String"
								},
								"Paso": {
									"value": "3",
									"type": "Int16"
								},
								"Proceso": {
									"value": "Auditoria",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "dsa_SistemaGerenteChl"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dsa_SistemaGerente_Col')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fecha Carga",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_CargaFecha]",
								"storedProcedureParameters": {
									"Dias": {
										"type": "Int32",
										"value": null
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": null
									},
									"FechaFin": {
										"type": "DateTime",
										"value": null
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": null
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Cargar Catalogo 1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Truncar Transaccional",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_SistemaGerente_Col_Catalogo_1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": {
									"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
									"type": "Expression"
								},
								"BaseDatos": {
									"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Carga Transaccional",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Cargar Catalogo 1",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Cargar Catalogo 2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Fecha Carga').output.firstRow.AnioFechaInicio, activity('Fecha Carga').output.firstRow.AnioFechaFin)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Carga Anterior",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Col_Transaccional_1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorAnterior1",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosAnterior1",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHastaAnioAnterior",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Carga Actual_",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Carga Anterior",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Col_Transaccional_1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesdeAnioActual",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Carga Actual",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Col_Transaccional_1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncar Transaccional",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Obtener Servidores",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "TRUNCATE TABLE [dsa_col_sg].[ArticuloBodega]\nTRUNCATE TABLE [dsa_col_sg].[AuditTrans]\nTRUNCATE TABLE [dsa_col_sg].[CabPedidos]\nTRUNCATE TABLE [dsa_col_sg].[CajaChica]\nTRUNCATE TABLE [dsa_col_sg].[CierreCajas]\nTRUNCATE TABLE [dsa_col_sg].[CierreChica]\nTRUNCATE TABLE [dsa_col_sg].[Costos_Historicos]\nTRUNCATE TABLE [dsa_col_sg].[CuponCliente]\nTRUNCATE TABLE [dsa_col_sg].[Cupones]\nTRUNCATE TABLE [dsa_col_sg].[Depositos]\nTRUNCATE TABLE [dsa_col_sg].[DetPedidos]\nTRUNCATE TABLE [dsa_col_sg].[DinTrans]\nTRUNCATE TABLE [dsa_col_sg].[Estado_PyG]\nTRUNCATE TABLE [dsa_col_sg].[GastosGenerales]\nTRUNCATE TABLE [dsa_col_sg].[InvMovimiento]\nTRUNCATE TABLE [dsa_col_sg].[MixCab]\nTRUNCATE TABLE [dsa_col_sg].[MixTrans]\nTRUNCATE TABLE [dsa_col_sg].[MovInv]\nTRUNCATE TABLE [dsa_col_sg].[PlusCupones]\nTRUNCATE TABLE [dsa_col_sg].[PlusTrans]\nTRUNCATE TABLE [dsa_col_sg].[Porcentuales]\nTRUNCATE TABLE [dsa_col_sg].[Porcentuales_Restaurante]\nTRUNCATE TABLE [dsa_col_sg].[PyG]\nTRUNCATE TABLE [dsa_col_sg].[TomaFisica]\nTRUNCATE TABLE [dsa_col_sg].[VentasHora]\nTRUNCATE TABLE [dsa_col_sg].[VentasHora_Domicilio]\n\nSELECT 'ok' AS Resultado"
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Obtener Servidores",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Fecha Carga",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_ObtenerLinkedBase]",
								"storedProcedureParameters": {
									"CodigoETL": {
										"type": "String",
										"value": "BD-SG-COL"
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
											"type": "Expression"
										}
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Cargar Catalogo 2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Truncar Transaccional",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_SistemaGerente_Col_Catalogo_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": {
									"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
									"type": "Expression"
								},
								"BaseDatos": {
									"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Actualiza Estadistica 1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_col_sg",
									"type": "String"
								},
								"Paso": {
									"value": "1",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Actualiza Estadistica 2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_col_sg",
									"type": "String"
								},
								"Paso": {
									"value": "2",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Actualiza Estadistica 3",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_col_sg",
									"type": "String"
								},
								"Paso": {
									"value": "3",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Actualiza Estadistica 4",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_col_sg",
									"type": "String"
								},
								"Paso": {
									"value": "4",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "dsa_SistemaGerenteCol"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dsa_SistemaGerente_Col_Auditoria')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fecha Carga",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_CargaFecha]",
								"storedProcedureParameters": {
									"Dias": {
										"type": "Int32",
										"value": null
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": null
									},
									"FechaFin": {
										"type": "DateTime",
										"value": null
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": null
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Cargar Catalogo 1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Truncar Transaccional",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_SistemaGerente_Col_Catalogo_1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": {
									"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
									"type": "Expression"
								},
								"BaseDatos": {
									"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Carga Transaccional",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Cargar Catalogo 1",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Cargar Catalogo 2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Fecha Carga').output.firstRow.AnioFechaInicio, activity('Fecha Carga').output.firstRow.AnioFechaFin)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Carga Anterior",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Col_Transaccional_Auditoria",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorAnterior1",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosAnterior1",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHastaAnioAnterior",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Carga Actual_",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Carga Anterior",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Col_Transaccional_Auditoria",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesdeAnioActual",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Carga Actual",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Col_Transaccional_Auditoria",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncar Transaccional",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Obtener Servidores",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "TRUNCATE TABLE [dsa_col_sg].[ArticuloBodega]\nTRUNCATE TABLE [dsa_col_sg].[CierreCajas]\nTRUNCATE TABLE [dsa_col_sg].[CierreChica]\nTRUNCATE TABLE [dsa_col_sg].[Depositos]\nTRUNCATE TABLE [dsa_col_sg].[DinTrans]\nTRUNCATE TABLE [dsa_col_sg].[InvMovimiento]\nTRUNCATE TABLE [dsa_col_sg].[MovInv]\nTRUNCATE TABLE [dsa_col_sg].[PlusTrans]\nTRUNCATE TABLE [dsa_col_sg].[Porcentuales]\nTRUNCATE TABLE [dsa_col_sg].[Porcentuales_Restaurante]\n\nSELECT 'ok' AS Resultado"
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Obtener Servidores",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Fecha Carga",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_ObtenerLinkedBase]",
								"storedProcedureParameters": {
									"CodigoETL": {
										"type": "String",
										"value": "BD-SG-COL"
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
											"type": "Expression"
										}
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Cargar Catalogo 2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Truncar Transaccional",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_SistemaGerente_Col_Catalogo_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": {
									"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
									"type": "Expression"
								},
								"BaseDatos": {
									"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Actualiza Estadistica 1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_col_sg",
									"type": "String"
								},
								"Paso": {
									"value": "1",
									"type": "Int16"
								},
								"Proceso": {
									"value": "Auditoria",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Actualiza Estadistica 2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_col_sg",
									"type": "String"
								},
								"Paso": {
									"value": "2",
									"type": "Int16"
								},
								"Proceso": {
									"value": "Auditoria",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Actualiza Estadistica 3",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_col_sg",
									"type": "String"
								},
								"Paso": {
									"value": "3",
									"type": "Int16"
								},
								"Proceso": {
									"value": "Auditoria",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "dsa_SistemaGerenteCol"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dsa_SistemaGerente_Ecu_Auditoria')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fecha Carga",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_CargaFecha]",
								"storedProcedureParameters": {
									"Dias": {
										"type": "Int32",
										"value": null
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": null
									},
									"FechaFin": {
										"type": "DateTime",
										"value": null
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": null
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Carga Transaccional",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Cargar Catalogo 1",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Cargar Catalogo 2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Fecha Carga').output.firstRow.AnioFechaInicio, activity('Fecha Carga').output.firstRow.AnioFechaFin)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Carga Anterior UIO",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Ecu_Transaccional_Auditoria",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorAnterior1",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosAnterior1",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHastaAnioAnterior",
												"type": "Expression"
											},
											"Region": {
												"value": "@activity('Obtener Servidores').output.firstRow.RegionAnterior1",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Carga Actual UIO_",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Carga Anterior GYE",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Ecu_Transaccional_Auditoria",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesdeAnioActual",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHastaActual",
												"type": "Expression"
											},
											"Region": {
												"value": "@activity('Obtener Servidores').output.firstRow.RegionActual1",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Carga Anterior GYE",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Carga Anterior UIO",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Ecu_Transaccional_Auditoria",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorAnterior2",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosAnterior2",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHastaAnioAnterior",
												"type": "Expression"
											},
											"Region": {
												"value": "@activity('Obtener Servidores').output.firstRow.RegionAnterior2",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Carga Actual GYE_",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Carga Actual UIO_",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Ecu_Transaccional_Auditoria",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual2",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual2",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesdeAnioActual",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHastaActual",
												"type": "Expression"
											},
											"Region": {
												"value": "@activity('Obtener Servidores').output.firstRow.RegionActual2",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Carga Actual UIO",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Ecu_Transaccional_Auditoria",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHastaActual",
												"type": "Expression"
											},
											"Region": {
												"value": "@activity('Obtener Servidores').output.firstRow.RegionActual1",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Carga Actual GYE",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Carga Actual UIO",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Ecu_Transaccional_Auditoria",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual2",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual2",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHastaActual",
												"type": "Expression"
											},
											"Region": {
												"value": "@activity('Obtener Servidores').output.firstRow.RegionActual2",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncar Transaccional",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Obtener Servidores",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "TRUNCATE TABLE [dsa_ecu_sg].[ArticuloBodega]\nTRUNCATE TABLE [dsa_ecu_sg].[CierreCajas]\nTRUNCATE TABLE [dsa_ecu_sg].[CierreChica]\nTRUNCATE TABLE [dsa_ecu_sg].[Depositos]\nTRUNCATE TABLE [dsa_ecu_sg].[Detalle_Solicitud]\nTRUNCATE TABLE [dsa_ecu_sg].[DinTrans]\nTRUNCATE TABLE [dsa_ecu_sg].[InvMovimiento]\nTRUNCATE TABLE [dsa_ecu_sg].[MovInv]\nTRUNCATE TABLE [dsa_ecu_sg].[PlusTrans]\nTRUNCATE TABLE [dsa_ecu_sg].[Porcentuales]\nTRUNCATE TABLE [dsa_ecu_sg].[Porcentuales_Restaurante]\nTRUNCATE TABLE [dsa_ecu_sg].[Solicitud_Cupon]\nTRUNCATE TABLE [dsa_ecu_sg].[Cupones]\nTRUNCATE TABLE [dsa_ecu_sg].[CuponCliente]\nTRUNCATE TABLE [dsa_ecu_sg].[PlusCupones]\nTRUNCATE TABLE [dsa_ecu_sg].[VentaXMedio]\nTRUNCATE TABLE [dsa_ecu_sg].[AuditTrans]\nTRUNCATE TABLE [dsa_ecu_sg].[MixCab]\n\nSELECT 'ok' AS Resultado"
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Cargar Catalogo 1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Truncar Transaccional",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_SistemaGerente_Ecu_Catalogo_1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ServidorQuito": {
									"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
									"type": "Expression"
								},
								"BaseDatosQuito": {
									"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
									"type": "Expression"
								},
								"ServidorGuayaquil": {
									"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual2",
									"type": "Expression"
								},
								"BaseDatosGuayaquil": {
									"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual2",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Cargar Catalogo 2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Truncar Transaccional",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_SistemaGerente_Ecu_Catalogo_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ServidorQuito": {
									"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
									"type": "Expression"
								},
								"BaseDatosQuito": {
									"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
									"type": "Expression"
								},
								"ServidorGuayaquil": {
									"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual2",
									"type": "Expression"
								},
								"BaseDatosGuayaquil": {
									"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual2",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Obtener Servidores",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Fecha Carga",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_ObtenerLinkedBase]",
								"storedProcedureParameters": {
									"CodigoETL": {
										"type": "String",
										"value": "BD-SG-ECU"
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
											"type": "Expression"
										}
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaHastaActual",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Actualiza Estadistica 1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_ecu_sg",
									"type": "String"
								},
								"Paso": {
									"value": "1",
									"type": "Int16"
								},
								"Proceso": {
									"value": "Auditoria",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Actualiza Estadistica 2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_ecu_sg",
									"type": "String"
								},
								"Paso": {
									"value": "2",
									"type": "Int16"
								},
								"Proceso": {
									"value": "Auditoria",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Actualiza Estadistica 3",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_ecu_sg",
									"type": "String"
								},
								"Paso": {
									"value": "3",
									"type": "Int16"
								},
								"Proceso": {
									"value": "Auditoria",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "dsa_SistemaGerenteEcu"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dsa_SistemaGerente_Ecu_Transaccional')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Carga Transac UIO 1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_SistemaGerente_Ecu_Transaccional_1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": {
									"value": "@pipeline().parameters.ServidorQuito",
									"type": "Expression"
								},
								"BaseDatos": {
									"value": "@pipeline().parameters.BaseDatosQuito",
									"type": "Expression"
								},
								"FechaDesde": {
									"value": "@pipeline().parameters.FechaDesde",
									"type": "Expression"
								},
								"FechaHasta": {
									"value": "@pipeline().parameters.FechaHasta",
									"type": "Expression"
								},
								"Region": {
									"value": "@pipeline().parameters.RegionQuito",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Carga Transac UIO 2",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_SistemaGerente_Ecu_Transaccional_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": {
									"value": "@pipeline().parameters.ServidorQuito",
									"type": "Expression"
								},
								"BaseDatos": {
									"value": "@pipeline().parameters.BaseDatosQuito",
									"type": "Expression"
								},
								"FechaDesde": {
									"value": "@pipeline().parameters.FechaDesde",
									"type": "Expression"
								},
								"FechaHasta": {
									"value": "@pipeline().parameters.FechaHasta",
									"type": "Expression"
								},
								"Region": {
									"value": "@pipeline().parameters.RegionQuito",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Carga Transac GYE 1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Carga Transac UIO 1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_SistemaGerente_Ecu_Transaccional_1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": {
									"value": "@pipeline().parameters.ServidorGuayaquil",
									"type": "Expression"
								},
								"BaseDatos": {
									"value": "@pipeline().parameters.BaseDatosGuayaquil",
									"type": "Expression"
								},
								"FechaDesde": {
									"value": "@pipeline().parameters.FechaDesde",
									"type": "Expression"
								},
								"FechaHasta": {
									"value": "@pipeline().parameters.FechaHasta",
									"type": "Expression"
								},
								"Region": {
									"value": "@pipeline().parameters.RegionGuayaquil",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Carga Transac GYE 2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Carga Transac UIO 2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_SistemaGerente_Ecu_Transaccional_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": {
									"value": "@pipeline().parameters.ServidorGuayaquil",
									"type": "Expression"
								},
								"BaseDatos": {
									"value": "@pipeline().parameters.BaseDatosGuayaquil",
									"type": "Expression"
								},
								"FechaDesde": {
									"value": "@pipeline().parameters.FechaDesde",
									"type": "Expression"
								},
								"FechaHasta": {
									"value": "@pipeline().parameters.FechaHasta",
									"type": "Expression"
								},
								"Region": {
									"value": "@pipeline().parameters.RegionGuayaquil",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"ServidorQuito": {
						"type": "string",
						"defaultValue": "SAZGERENTEDBUIO"
					},
					"ServidorGuayaquil": {
						"type": "string",
						"defaultValue": "SAZGERENTEDBGYE"
					},
					"BaseDatosQuito": {
						"type": "string",
						"defaultValue": "SQLGerente_19"
					},
					"BaseDatosGuayaquil": {
						"type": "string",
						"defaultValue": "SQLGerente_19"
					},
					"RegionQuito": {
						"type": "string",
						"defaultValue": "QUITO"
					},
					"RegionGuayaquil": {
						"type": "string",
						"defaultValue": "GUAYAQUIL"
					},
					"FechaDesde": {
						"type": "string"
					},
					"FechaHasta": {
						"type": "string"
					}
				},
				"folder": {
					"name": "dsa_SistemaGerenteEcu"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dsa_SistemaGerente_Esp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fecha Carga",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_CargaFecha]",
								"storedProcedureParameters": {
									"Dias": {
										"type": "Int32",
										"value": null
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": null
									},
									"FechaFin": {
										"type": "DateTime",
										"value": null
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": null
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Cargar Catalogo 1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Truncar Transaccional",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dsa_SistemaGerente_Esp_Catalogo_1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Servidor": {
									"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
									"type": "Expression"
								},
								"BaseDatos": {
									"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Carga Transaccional",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Cargar Catalogo 1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Fecha Carga').output.firstRow.AnioFechaInicio, activity('Fecha Carga').output.firstRow.AnioFechaFin)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Carga Anterior",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Esp_Transaccional_1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorAnterior1",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosAnterior1",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHastaAnioAnterior",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Carga Actual_",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Carga Anterior",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Esp_Transaccional_1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesdeAnioActual",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Carga Actual",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_dsa_SistemaGerente_Esp_Transaccional_1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Servidor": {
												"value": "@activity('Obtener Servidores').output.firstRow.ServidorActual1",
												"type": "Expression"
											},
											"BaseDatos": {
												"value": "@activity('Obtener Servidores').output.firstRow.BaseDatosActual1",
												"type": "Expression"
											},
											"FechaDesde": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
												"type": "Expression"
											},
											"FechaHasta": {
												"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncar Transaccional",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Obtener Servidores",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "TRUNCATE TABLE dsa_esp_sg.AuditTrans\nTRUNCATE TABLE dsa_esp_sg.CabPedidos\nTRUNCATE TABLE dsa_esp_sg.CierreCajas\nTRUNCATE TABLE dsa_esp_sg.CierreChica\nTRUNCATE TABLE dsa_esp_sg.Costos_Historicos\nTRUNCATE TABLE dsa_esp_sg.Depositos\nTRUNCATE TABLE dsa_esp_sg.DetPedidos\nTRUNCATE TABLE dsa_esp_sg.DinTrans\nTRUNCATE TABLE dsa_esp_sg.Estado_PyG\nTRUNCATE TABLE dsa_esp_sg.GastosGenerales\nTRUNCATE TABLE dsa_esp_sg.MixCab\nTRUNCATE TABLE dsa_esp_sg.MixTrans\nTRUNCATE TABLE dsa_esp_sg.MovInv\nTRUNCATE TABLE dsa_esp_sg.InvMovimiento\nTRUNCATE TABLE dsa_esp_sg.PlusTrans\nTRUNCATE TABLE dsa_esp_sg.PyG\nTRUNCATE TABLE dsa_esp_sg.TomaFisica\nTRUNCATE TABLE dsa_esp_sg.VentasHora\nTRUNCATE TABLE dsa_esp_sg.CajaChica\nTRUNCATE TABLE dsa_esp_sg.ArticuloBodega\nTRUNCATE TABLE dsa_esp_sg.Porcentuales\nTRUNCATE TABLE dsa_esp_sg.Porcentuales_Restaurante\n\nSELECT 'ok' AS Resultado"
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Obtener Servidores",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Fecha Carga",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[admin_adm].[usp_ObtenerLinkedBase]",
								"storedProcedureParameters": {
									"CodigoETL": {
										"type": "String",
										"value": "BD-SG-ESP"
									},
									"FechaDesde": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaDesde",
											"type": "Expression"
										}
									},
									"FechaHasta": {
										"type": "DateTime",
										"value": {
											"value": "@activity('Fecha Carga').output.firstRow.FechaHasta",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "ds_dwh_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Actualiza Estadistica 1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_esp_sg",
									"type": "String"
								},
								"Paso": {
									"value": "1",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Actualiza Estadistica 2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_esp_sg",
									"type": "String"
								},
								"Paso": {
									"value": "2",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Actualiza Estadistica 3",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_esp_sg",
									"type": "String"
								},
								"Paso": {
									"value": "3",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Actualiza Estadistica 4",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Transaccional",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[admin_adm].[ActualizarEstadisticas]",
							"storedProcedureParameters": {
								"Esquema": {
									"value": "dsa_esp_sg",
									"type": "String"
								},
								"Paso": {
									"value": "4",
									"type": "Int16"
								},
								"Proceso": {
									"value": "General",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linked_dwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "dsa_SistemaGerenteEsp"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}